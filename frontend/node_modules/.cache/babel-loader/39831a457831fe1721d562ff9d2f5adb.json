{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/dnd/src/Components/column.js\";\nimport React, { useContext } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { PlaceContext } from '../Store/PlaceContext';\nimport Item from './item';\n\nfunction Column(props) {\n  const {\n    contextState\n  } = useContext(PlaceContext);\n  const {\n    column,\n    places\n  } = props;\n\n  const logPlaces = () => {\n    const id = column.id;\n    console.log(contextState.columns[id]);\n  };\n\n  return React.createElement(\"div\", {\n    className: column.id === 'data-1' ? 'board-horizontal' : 'board',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, column.title), React.createElement(Droppable, {\n    droppableId: column.id,\n    direction: column.id === 'data-1' ? \"horizontal\" : \"vertical\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    className: column.id === 'data-1' ? 'column-horizontal' : 'column',\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), places.map((place, index) => React.createElement(Item, {\n    key: place.id,\n    place: place,\n    index: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), provided.placeholder)), React.createElement(\"button\", {\n    onClick: logPlaces,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"hello\"));\n}\n\nexport default Column;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Components/column.js"],"names":["React","useContext","Droppable","PlaceContext","Item","Column","props","contextState","column","places","logPlaces","id","console","log","columns","title","provided","innerRef","droppableProps","map","place","index","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,SAASC,YAAT,QAA6B,uBAA7B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,QAAM;AAACC,IAAAA;AAAD,MAAiBN,UAAU,CAACE,YAAD,CAAjC;AACA,QAAM;AAACK,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAmBH,KAAzB;;AAEA,QAAMI,SAAS,GAAG,MAAM;AACpB,UAAMC,EAAE,GAAGH,MAAM,CAACG,EAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,YAAY,CAACO,OAAb,CAAqBH,EAArB,CAAZ;AACH,GAHD;;AAKA,SACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACG,EAAP,KAAc,QAAd,GAAyB,kBAAzB,GAA8C,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,MAAM,CAACO,KAAZ,CADJ,EAEI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAEP,MAAM,CAACG,EADxB;AAEI,IAAA,SAAS,EAAEH,MAAM,CAACG,EAAP,KAAc,QAAd,GAAyB,YAAzB,GAAwC,UAFvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIMK,QAAD,IACG;AAAK,IAAA,SAAS,EAAER,MAAM,CAACG,EAAP,KAAc,QAAd,GAAyB,mBAAzB,GAA+C,QAA/D;AACI,IAAA,GAAG,EAAEK,QAAQ,CAACC;AADlB,KAEQD,QAAQ,CAACE,cAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIKT,MAAM,CAACU,GAAP,CAAW,CAACC,KAAD,EAAQC,KAAR,KAAkB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,KAAK,CAACT,EAAjB;AAAqB,IAAA,KAAK,EAAES,KAA5B;AAAmC,IAAA,KAAK,EAAEC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CAJL,EAKKL,QAAQ,CAACM,WALd,CALR,CAFJ,EAgBI;AAAQ,IAAA,OAAO,EAAEZ,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBJ,CADJ;AAoBH;;AAED,eAAeL,MAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Droppable } from 'react-beautiful-dnd'\n\nimport { PlaceContext } from '../Store/PlaceContext';\n\nimport Item from './item';\n\nfunction Column(props) {\n\n    const {contextState} = useContext(PlaceContext);\n    const {column, places} = props;\n\n    const logPlaces = () => {\n        const id = column.id;\n        console.log(contextState.columns[id]);\n    }\n\n    return (\n        <div className={column.id === 'data-1' ? 'board-horizontal' : 'board'}>\n            <h3>{column.title}</h3>\n            <Droppable \n                droppableId={column.id}\n                direction={column.id === 'data-1' ? \"horizontal\" : \"vertical\"}\n            >\n                {(provided) => (\n                    <div className={column.id === 'data-1' ? 'column-horizontal' : 'column'}\n                        ref={provided.innerRef}\n                        {...provided.droppableProps}\n                    >\n                        {places.map((place, index) => <Item key={place.id} place={place} index={index}/>)}\n                        {provided.placeholder}\n                    </div>\n                )}\n            </Droppable>\n            <button onClick={logPlaces}>hello</button>\n        </div>\n    );\n}\n\nexport default Column;"]},"metadata":{},"sourceType":"module"}