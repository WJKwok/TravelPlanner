{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/dnd/src/Components/board.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from '../Store/initial-data';\nimport Column from './column';\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId]; //if moving within the same column\n\n      if (start === finish) {\n        const column = this.state.columns[source.droppableId];\n        const newplaceIds = Array.from(column.placeIds);\n        newplaceIds.splice(source.index, 1);\n        newplaceIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...column,\n          placeIds: newplaceIds\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      } //moving from one list to another\n\n\n      const startplaceIds = Array.from(start.placeIds);\n      startplaceIds.splice(source.index, 1);\n      const newStart = { ...start,\n        placeIds: startplaceIds\n      };\n      const finishplaceIds = Array.from(finish.placeIds);\n      finishplaceIds.splice(destination.index, 0, draggableId);\n      const newFinish = { ...finish,\n        placeIds: finishplaceIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n\n    this.changeHandler = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.clickHandler = () => {\n      console.log('hello'); // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n      // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n\n      const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n      const place = this.state.place;\n      const type = this.state.type;\n      console.log(googlePlacesApi);\n      fetch(`/place/textsearch/json?query=${type}+${place}&key=${googlePlacesApi}`).then(res => res.json()).then(data => {\n        console.log(data.results);\n        var placesFetched = {};\n        var placeIds = [];\n\n        for (var i = 0; i < data.results.length; i++) {\n          var placeObject = {};\n          placeObject['id'] = `task-${i}`;\n          placeObject['content'] = data.results[i].name;\n          placeObject['rating'] = data.results[i].rating;\n          console.log(placeObject);\n          placeIds.push(`task-${i}`);\n          placesFetched[`task-${i}`] = placeObject;\n        }\n\n        const newState = { ...this.state,\n          tasks: placesFetched,\n          columns: { ...this.state.columns,\n            'data-1': { ...this.state.columns['data-1'],\n              placeIds: placeIds\n            }\n          }\n        };\n        this.setState(newState);\n      }).catch(error => console.error(error));\n      const columnsCount = this.state.number;\n      var columns = {};\n      var columnOrder = [];\n\n      for (var i = 0; i < columnsCount; i++) {\n        var dataObject = {};\n        dataObject['id'] = `column-${i}`;\n        dataObject['title'] = `Day ${i + 1}`;\n        dataObject['placeIds'] = [];\n        columns[`column-${i}`] = dataObject;\n        columnOrder.push(`column-${i}`);\n      }\n\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          ...columns\n        },\n        columnOrder: [...columnOrder]\n      };\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"select-css\",\n      id: \"type\",\n      value: this.state.type,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"Restaurants\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Restaurants\"), React.createElement(\"option\", {\n      value: \"Hotels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Hotels\"), React.createElement(\"option\", {\n      value: \"Tourist+attraction\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Tourist+attraction\")), React.createElement(\"input\", {\n      id: \"place\",\n      placeholder: \"City\",\n      type: \"text\",\n      value: this.state.place,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      id: \"number\",\n      placeholder: \"No. of Days\",\n      type: \"text\",\n      value: this.state.number,\n      onChange: this.changeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.clickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.columnOrder.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.placeIds.map(taskId => this.state.tasks[taskId]);\n      return React.createElement(Column, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, this.state.dataColumn.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.placeIds.map(taskId => this.state.tasks[taskId]);\n      return React.createElement(Column, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Components/board.js"],"names":["React","Component","DragDropContext","initialData","Column","Board","state","onDragEnd","result","destination","source","draggableId","droppableId","index","start","columns","finish","column","newplaceIds","Array","from","placeIds","splice","newColumn","newState","id","setState","startplaceIds","newStart","finishplaceIds","newFinish","changeHandler","e","target","value","clickHandler","console","log","googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","place","type","fetch","then","res","json","data","results","placesFetched","i","length","placeObject","name","rating","push","tasks","catch","error","columnsCount","number","columnOrder","dataObject","render","map","columnId","taskId","dataColumn"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport initialData from '../Store/initial-data';\nimport Column from './column';\n\nclass Board extends Component {\n\n    state = initialData;\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const start = this.state.columns[source.droppableId];\n        const finish = this.state.columns[destination.droppableId];\n\n        //if moving within the same column\n        if (start === finish) {\n            const column = this.state.columns[source.droppableId];\n            const newplaceIds = Array.from(column.placeIds);\n            newplaceIds.splice(source.index, 1);\n            newplaceIds.splice(destination.index, 0, draggableId);\n\n            const newColumn = {\n                ...column,\n                placeIds: newplaceIds,\n            };\n\n            const newState = {\n                ...this.state,\n                columns: {\n                    ...this.state.columns,\n                    [newColumn.id]: newColumn,\n                },\n            };\n\n            this.setState(newState);\n            return;\n        }\n\n        //moving from one list to another\n        const startplaceIds = Array.from(start.placeIds);\n        startplaceIds.splice(source.index, 1);\n        const newStart = {\n            ...start,\n            placeIds: startplaceIds,\n        };\n\n        const finishplaceIds = Array.from(finish.placeIds);\n        finishplaceIds.splice(destination.index, 0, draggableId);\n        const newFinish = {\n            ...finish,\n            placeIds: finishplaceIds,\n        };\n\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newStart.id]: newStart,\n                [newFinish.id]: newFinish,\n            },\n        };\n\n        this.setState(newState);\n    };\n\n    changeHandler = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    };\n\n    clickHandler = () => {\n        console.log('hello');\n\n        // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n        // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n        const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n        const place = this.state.place;\n        const type = this.state.type;\n        console.log(googlePlacesApi);\n        fetch(`/place/textsearch/json?query=${type}+${place}&key=${googlePlacesApi}`)\n            .then(res => res.json())\n            .then(data => {\n                console.log(data.results)\n\n                var placesFetched = {};\n                var placeIds = [];\n\n                for (var i = 0; i < data.results.length; i++) {\n                    var placeObject = {};\n                    placeObject['id'] = `task-${i}`;\n                    placeObject['content'] = data.results[i].name;\n                    placeObject['rating'] = data.results[i].rating;\n                    console.log(placeObject);\n                    placeIds.push(`task-${i}`);\n                    placesFetched[`task-${i}`] = placeObject;\n                }\n\n                const newState = {\n                    ...this.state,\n                    tasks: placesFetched,\n                    columns: {\n                        ...this.state.columns,\n                        'data-1': {\n                            ...this.state.columns['data-1'],\n                            placeIds: placeIds\n\n                        }\n                    }\n                }\n\n                this.setState(newState);\n            })\n            .catch(error => console.error(error))\n\n        const columnsCount = this.state.number;\n\n        var columns = {};\n        var columnOrder = [];\n\n        for (var i = 0; i < columnsCount; i++) {\n            var dataObject = {};\n            dataObject['id'] = `column-${i}`;\n            dataObject['title'] = `Day ${i + 1}`;\n            dataObject['placeIds'] = [];\n\n            columns[`column-${i}`] = dataObject;\n            columnOrder.push(`column-${i}`);\n        }\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                ...columns,\n            },\n            columnOrder: [...columnOrder],\n        }\n\n        this.setState(newState);\n    };\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <select className=\"select-css\" id='type' value={this.state.type} onChange={this.changeHandler}>\n                        <option value=\"Restaurants\">Restaurants</option>\n                        <option value=\"Hotels\">Hotels</option>\n                        <option value=\"Tourist+attraction\">Tourist+attraction</option>\n                    </select>\n                    <input id='place' placeholder='City' type=\"text\" value={this.state.place} onChange={this.changeHandler}/>\n                    <input id='number' placeholder='No. of Days' type=\"text\" value={this.state.number} onChange={this.changeHandler}/>\n                    <button type='submit' onClick={this.clickHandler}>Submit</button>\n                </div>\n                <DragDropContext onDragEnd={this.onDragEnd}>\n                    <div className='container'>\n                        {this.state.columnOrder.map(columnId => {\n                            const column = this.state.columns[columnId];\n                            const tasks = column.placeIds.map(taskId => \n                                this.state.tasks[taskId]\n                            );\n\n                            return <Column key={column.id} column={column} tasks={tasks}/>\n                        })}\n                    </div>\n                    <div className='container'>\n                        {this.state.dataColumn.map(columnId => {\n                            const column = this.state.columns[columnId];\n                            const tasks = column.placeIds.map(taskId => \n                                this.state.tasks[taskId]\n                            );\n\n                            return <Column key={column.id} column={column} tasks={tasks}/>\n                        })}\n                    </div>\n                </DragDropContext>\n            </div>\n            \n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}