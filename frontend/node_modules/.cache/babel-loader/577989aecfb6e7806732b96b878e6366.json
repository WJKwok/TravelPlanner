{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/placeAutoComplete.js\";\nimport React, { useState } from 'react';\n\nfunction PlaceAutoComplete() {\n  const [searchState, setSearchState] = useState(\"\");\n  const [sugestionsState, setSuggestionState] = useState([]);\n  const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n  const coordinates = {\n    \"Berlin\": {\n      lat: 52.52,\n      lng: 13.40\n    },\n    \"Zurich\": {\n      lat: 47.3769,\n      lng: 8.5417\n    },\n    \"New+York\": {\n      lat: 40.7128,\n      lng: -74.0060\n    }\n  };\n\n  const searchHandler = async e => {\n    setSearchState(e.target.value);\n    const response = await fetch(`place/autocomplete/json?input=${e.target.value}&types=establishment&location=52.52,13.40&radius=500&key=${googlePlacesApi}`);\n    const data = await response.json();\n    setSuggestionState(data.predictions);\n    console.log(data);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: searchState,\n    onChange: searchHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), sugestionsState.map(suggestion => {\n    return React.createElement(\"p\", {\n      key: suggestion.place_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, suggestion.description);\n  }));\n}\n\nexport default PlaceAutoComplete;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/placeAutoComplete.js"],"names":["React","useState","PlaceAutoComplete","searchState","setSearchState","sugestionsState","setSuggestionState","googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","coordinates","lat","lng","searchHandler","e","target","value","response","fetch","data","json","predictions","console","log","map","suggestion","place_id","description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,SAASC,iBAAT,GAA6B;AAEzB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCH,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACI,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,EAAD,CAAtD;AAEA,QAAMM,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAApC;AAEA,QAAMC,WAAW,GAAG;AAChB,cAAU;AACNC,MAAAA,GAAG,EAAE,KADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KADM;AAKhB,cAAU;AACND,MAAAA,GAAG,EAAE,OADC;AAENC,MAAAA,GAAG,EAAE;AAFC,KALM;AAShB,gBAAY;AACRD,MAAAA,GAAG,EAAE,OADG;AAERC,MAAAA,GAAG,EAAE,CAAC;AAFE;AATI,GAApB;;AAeA,QAAMC,aAAa,GAAG,MAAOC,CAAP,IAAa;AAC/BX,IAAAA,cAAc,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iCAAgCJ,CAAC,CAACC,MAAF,CAASC,KAAM,4DAA2DV,eAAgB,EAA5H,CAA5B;AACA,UAAMa,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAf,IAAAA,kBAAkB,CAACc,IAAI,CAACE,WAAN,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACH,GAND;;AAQA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,KAAK,EAAEjB,WAAd;AAA2B,IAAA,QAAQ,EAAEW,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKT,eAAe,CAACoB,GAAhB,CAAqBC,UAAD,IAAgB;AACjC,WAAO;AAAG,MAAA,GAAG,EAAEA,UAAU,CAACC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,UAAU,CAACE,WAAzC,CAAP;AACH,GAFA,CAFL,CADJ;AASH;;AAED,eAAe1B,iBAAf","sourcesContent":["import React, {useState} from 'react';\n\nfunction PlaceAutoComplete() {\n\n    const [searchState, setSearchState] = useState(\"\");\n    const [sugestionsState, setSuggestionState] = useState([]);\n\n    const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n\n    const coordinates = {\n        \"Berlin\": {\n            lat: 52.52,\n            lng: 13.40,\n        },\n        \"Zurich\": {\n            lat: 47.3769,\n            lng: 8.5417,\n        },\n        \"New+York\": {\n            lat: 40.7128,\n            lng: -74.0060\n        },\n    }\n\n    const searchHandler = async (e) => {\n        setSearchState(e.target.value)\n        const response = await fetch(`place/autocomplete/json?input=${e.target.value}&types=establishment&location=52.52,13.40&radius=500&key=${googlePlacesApi}`)\n        const data = await response.json();\n        setSuggestionState(data.predictions);\n        console.log(data);\n    }\n\n    return(\n        <div>\n            <input value={searchState} onChange={searchHandler}/>\n            {sugestionsState.map((suggestion) => {\n                return <p key={suggestion.place_id}>{suggestion.description}</p>\n            })}\n        </div>\n        \n    );\n}\n\nexport default PlaceAutoComplete;"]},"metadata":{},"sourceType":"module"}