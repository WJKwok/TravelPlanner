{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/form.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem, Button } from '@material-ui/core/';\nimport FlightIcon from '@material-ui/icons/Flight';\nimport { PlaceContext } from '../Store/PlaceContext';\nconst useStyles = makeStyles({\n  textField: {\n    marginRight: 5,\n    width: '25ch'\n  },\n  submitButton: {\n    height: 53\n  },\n  root: {\n    paddingTop: 20,\n    paddingBottom: 40\n  }\n});\n\nfunction Form() {\n  const {\n    dispatch\n  } = useContext(PlaceContext);\n  const [days, setDays] = useState(0);\n  const [location, setLocation] = useState(\"Berlin\");\n  const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n\n  const fetchPlaces = async () => {\n    const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n\n    for (var i = 0; i < placeTypes.length; i++) {\n      // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n      // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n      const response = await fetch(`/place/textsearch/json?query=best+${placeTypes[i]}+${location}&key=${googlePlacesApi}`);\n      const extraSuggestions = await response.json();\n      dispatch({\n        type: \"LOAD_ITINERARY\",\n        payload: {\n          extraSuggestions,\n          placeType: placeTypes[i]\n        }\n      });\n    }\n  };\n\n  const submitHandler = async () => {\n    dispatch({\n      type: \"LOAD_DAYBOARDS\",\n      payload: {\n        numberOfDays: days,\n        city: location\n      }\n    });\n    fetchPlaces(); // let compiledData = await fetchPlaces();\n    // dispatch({ type:'SHOW_PLACES', search: {compiledData, days, location}});\n  };\n\n  const classes = useStyles();\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    id: \"location\",\n    select: true,\n    label: \"Select City\",\n    value: location,\n    onChange: e => setLocation(e.target.value),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"Berlin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Berlin\"), React.createElement(MenuItem, {\n    value: \"Zurich\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Zurich\"), React.createElement(MenuItem, {\n    value: \"New+York\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"New York\")), React.createElement(TextField, {\n    className: classes.textField,\n    label: \"Days\",\n    value: days,\n    variant: \"outlined\",\n    onChange: e => setDays(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.submitButton,\n    onClick: submitHandler,\n    startIcon: React.createElement(FlightIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/form.js"],"names":["React","useState","useContext","makeStyles","TextField","MenuItem","Button","FlightIcon","PlaceContext","useStyles","textField","marginRight","width","submitButton","height","root","paddingTop","paddingBottom","Form","dispatch","days","setDays","location","setLocation","placeTypes","fetchPlaces","googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","i","length","response","fetch","extraSuggestions","json","type","payload","placeType","submitHandler","numberOfDays","city","classes","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, MenuItem, Button} from '@material-ui/core/';\nimport FlightIcon from '@material-ui/icons/Flight';\n\nimport { PlaceContext } from '../Store/PlaceContext';\n\nconst useStyles = makeStyles({\n    textField: {\n        marginRight: 5,\n        width: '25ch',\n    },\n    submitButton: {\n        height: 53,\n    },\n    root: {\n        paddingTop: 20,\n        paddingBottom: 40,\n    }\n})\n\nfunction Form() {\n\n    const { dispatch } = useContext(PlaceContext);\n\n    const [days, setDays] = useState(0);\n    const [location, setLocation] = useState(\"Berlin\");\n\n    const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n\n    const fetchPlaces = async () => {\n\n        const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n\n        for (var i = 0; i < placeTypes.length; i++){\n\n            // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n            // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n\n            const response = await fetch(`/place/textsearch/json?query=best+${placeTypes[i]}+${location}&key=${googlePlacesApi}`)\n            const extraSuggestions = await response.json();\n\n            dispatch({ type:\"LOAD_ITINERARY\", payload:{extraSuggestions, placeType: placeTypes[i]}})\n        }\n\n    }\n\n\n    const submitHandler = async () => {\n        \n        dispatch({ type:\"LOAD_DAYBOARDS\", payload:{numberOfDays: days, city: location}})\n        fetchPlaces();\n        // let compiledData = await fetchPlaces();\n        // dispatch({ type:'SHOW_PLACES', search: {compiledData, days, location}});\n\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <TextField\n            className={classes.textField}\n            id=\"location\"\n            select\n            label=\"Select City\"\n            value={location}\n            onChange={(e) => setLocation(e.target.value)}\n            variant=\"outlined\"\n            >\n                <MenuItem value=\"Berlin\">Berlin</MenuItem>\n                <MenuItem value=\"Zurich\">Zurich</MenuItem>\n                <MenuItem value=\"New+York\">New York</MenuItem>\n            </TextField>\n            <TextField \n                className={classes.textField}\n                label=\"Days\" \n                value={days} \n                variant=\"outlined\" \n                onChange={(e) => setDays(e.target.value)}\n            />\n            <Button \n                variant=\"outlined\" \n                className={classes.submitButton}\n                onClick={submitHandler}\n                startIcon={<FlightIcon />}\n            >\n                Submit\n            </Button>\n        </div>\n    );\n}\n\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}