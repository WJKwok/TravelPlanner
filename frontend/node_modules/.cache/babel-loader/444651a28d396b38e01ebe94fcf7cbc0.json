{"ast":null,"code":"export const placeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_PLACES':\n      const {\n        data,\n        days\n      } = action.search;\n      const newState = loadPlaces(state, data, days);\n      return newState;\n\n    case 'CHANGE_ORDER':\n      const {\n        newOrder\n      } = action.order;\n      return newOrder;\n\n    case 'HOVER_COLOR':\n      const {\n        newColor\n      } = action.color;\n      return newColor;\n\n    default:\n      return state;\n  }\n};\n\nconst loadPlaces = (state, data, days) => {\n  var columns = {};\n  var columnOrder = [];\n\n  for (var i = 0; i < days; i++) {\n    var dataObject = {};\n    dataObject['id'] = `column-${i}`;\n    dataObject['title'] = `Day ${i + 1}`;\n    dataObject['placeIds'] = [];\n    columns[`column-${i}`] = dataObject;\n    columnOrder.push(`column-${i}`);\n  }\n\n  var placesFetched = {};\n  var placeIds = [];\n\n  for (var j = 0; j < data.results.length; j++) {\n    //object structure of place card is set here\n    var placeObject = {};\n    placeObject['id'] = `place-${j}`;\n    placeObject['content'] = data.results[j].name;\n    placeObject['rating'] = data.results[j].rating;\n    placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n    placeObject['location'] = data.results[j].geometry.location; //console.log(placeObject);\n\n    placeIds.push(`place-${j}`);\n    placesFetched[`place-${j}`] = placeObject;\n  }\n\n  columns['data-1'] = { ...state.columns['data-1'],\n    placeIds: placeIds\n  };\n  const newState = { ...state,\n    places: placesFetched,\n    columns: { ...state.columns,\n      ...columns\n    },\n    columnOrder: [...columnOrder]\n  }; // console.log(newState);\n\n  return newState;\n};","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Store/placeReducer.js"],"names":["placeReducer","state","action","type","data","days","search","newState","loadPlaces","newOrder","order","newColor","color","columns","columnOrder","i","dataObject","push","placesFetched","placeIds","j","results","length","placeObject","name","rating","photos","photo_reference","geometry","location","places"],"mappings":"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","sourcesContent":["export const placeReducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_PLACES':\n            const { data, days } = action.search;\n            const newState = loadPlaces(state, data, days);\n            return newState;\n        case 'CHANGE_ORDER':\n            const { newOrder } = action.order;\n            return newOrder;\n        case 'HOVER_COLOR':\n            const { newColor } = action.color;\n            return newColor;\n        default:\n            return state;\n    }\n}\n\nconst loadPlaces = (state, data, days) => {\n\n    var columns = {};\n    var columnOrder = [];\n\n    for (var i = 0; i < days; i++) {\n        var dataObject = {};\n        dataObject['id'] = `column-${i}`;\n        dataObject['title'] = `Day ${i + 1}`;\n        dataObject['placeIds'] = [];\n\n        columns[`column-${i}`] = dataObject;\n        columnOrder.push(`column-${i}`);\n    }\n\n    var placesFetched = {};\n    var placeIds = [];\n    \n    for (var j = 0; j < data.results.length; j++) {\n\n        //object structure of place card is set here\n\n        var placeObject = {};\n        placeObject['id'] = `place-${j}`;\n        placeObject['content'] = data.results[j].name;\n        placeObject['rating'] = data.results[j].rating;\n        placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n        placeObject['location'] = data.results[j].geometry.location;\n        \n        //console.log(placeObject);\n        placeIds.push(`place-${j}`);\n        placesFetched[`place-${j}`] = placeObject;\n    \n    }\n\n    columns['data-1'] = {\n        ...state.columns['data-1'],\n        placeIds: placeIds\n    }\n    \n    const newState = {\n        ...state,\n        places: placesFetched,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        columnOrder: [...columnOrder],\n    }\n\n    // console.log(newState);\n    return newState;\n}"]},"metadata":{},"sourceType":"module"}