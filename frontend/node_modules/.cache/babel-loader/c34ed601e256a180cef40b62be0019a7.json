{"ast":null,"code":"import initialData from './initial-data';\nexport const placeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_PLACES':\n      const {\n        compiledData,\n        days,\n        location\n      } = action.search;\n      const placesLoaded = loadPlaces(state, compiledData, days, location);\n      return placesLoaded;\n\n    case 'ADD_EXTRA_DAY':\n      const extraDay = addExtraDay(state);\n      return extraDay;\n\n    case 'CHANGE_ORDER':\n      const {\n        newOrder\n      } = action.order;\n      return newOrder;\n\n    case 'LOAD_DAYBOARDS':\n      console.log('loading day boards');\n      console.log('before dayboards loaded places length: ', Object.keys(state.places).length);\n      const {\n        numberOfDays,\n        city\n      } = action.payload;\n      const dayBoardsLoaded = loadDayBoards(state, numberOfDays, city);\n      console.log('dayboards loaded places length: ', Object.keys(dayBoardsLoaded.places).length);\n      return dayBoardsLoaded;\n\n    case 'LOAD_DAYS':\n      const {\n        itinerary,\n        placesFetched\n      } = action.payload;\n      const daysLoaded = loadDays(state, itinerary, placesFetched);\n      console.log(daysLoaded);\n      return daysLoaded;\n\n    case 'LOAD_ITINERARY':\n      const {\n        extraSuggestions,\n        placeType\n      } = action.payload;\n      const itineraryLoaded = loadItinerary(state, extraSuggestions, placeType);\n      console.log(\"complete itinerary: \", itineraryLoaded);\n      return itineraryLoaded;\n\n    case 'CLEAR_STATE':\n      console.log('clearing state...');\n      console.log('cleared state: ', initialData);\n      return initialData;\n\n    case 'ADD_SEARCH_ITEM':\n      const {\n        placeObject\n      } = action.payload;\n      const addedItem = addItem(state, placeObject); //console.log('hello from reducer: ', placeObject)\n\n      console.log('reducer: ', addedItem);\n      return addedItem;\n\n    default:\n      return state;\n  }\n};\n\nconst addItem = (state, placeObject) => {\n  const newState = { ...state,\n    places: { ...state.places,\n      [placeObject.id]: placeObject\n    },\n    columns: { ...state.columns,\n      'searched-items': { ...state.columns['searched-items'],\n        placeIds: [...state.columns['searched-items'].placeIds, placeObject.id]\n      }\n    }\n  };\n  return newState;\n};\n\nconst loadDayBoards = (state, numberOfDays, city) => {\n  let columns = {};\n  let dayBoards = [];\n\n  for (var i = 0; i < numberOfDays; i++) {\n    let dayObject = {};\n    dayObject['id'] = `day-${i}`;\n    dayObject['title'] = `Day ${i + 1}`;\n    dayObject['placeIds'] = [];\n    columns[`day-${i}`] = dayObject;\n    dayBoards.push(`day-${i}`);\n  }\n\n  const newState = { ...state,\n    days: numberOfDays,\n    location: city,\n    columns: { ...state.columns,\n      ...columns\n    },\n    dayBoards: [...dayBoards]\n  };\n  return newState;\n};\n\nconst loadDays = (state, itinerary, placesFetched) => {\n  let columns = {};\n  let dayBoards = [];\n  const dayPlans = itinerary.dayPlans;\n\n  for (var i = 0; i < dayPlans.length; i++) {\n    let dayObject = {};\n    dayObject['id'] = `day-${i}`;\n    dayObject['title'] = `Day ${i + 1}`;\n    dayObject['placeIds'] = [];\n    columns[`day-${i}`] = dayObject;\n    dayBoards.push(`day-${i}`);\n  }\n\n  for (var i = 0; i < dayPlans.length; i++) {\n    const placeIds = dayPlans[i].placeIds;\n    columns[`day-${i}`].placeIds = placeIds;\n  }\n\n  const newState = { ...state,\n    itineraryId: itinerary.id,\n    days: dayPlans.length,\n    location: itinerary.city,\n    places: placesFetched,\n    columns: { ...state.columns,\n      ...columns\n    },\n    dayBoards: [...dayBoards]\n  };\n  return newState;\n};\n\nconst loadItinerary = (state, extraSuggestions, placeType) => {\n  //console.log('hello from reducer: ', extraSuggestions)\n  let placesFetched = state.places;\n  let columns = {};\n  let categoryBoards = [];\n  let data = extraSuggestions;\n  let placeIds = [];\n  console.log(\"check data result length: \", data.results);\n\n  for (var j = 0; j < data.results.length; j++) {\n    //remove duplicate data from category boards\n    if (data.results[j].place_id in placesFetched) {\n      continue;\n    }\n\n    var placeObject = {};\n    placeObject['id'] = data.results[j].place_id;\n    placeObject['content'] = data.results[j].name;\n    placeObject['rating'] = data.results[j].rating;\n    placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n    placeObject['location'] = data.results[j].geometry.location; //console.log(placeObject);\n\n    placeIds.push(data.results[j].place_id);\n    placesFetched[data.results[j].place_id] = placeObject;\n  }\n\n  columns[`category-${placeType}`] = {\n    id: `category-${placeType}`,\n    title: `${placeType}`,\n    placeIds: placeIds\n  };\n  categoryBoards.push(`category-${placeType}`);\n  const newState = { ...state,\n    places: placesFetched,\n    columns: { ...state.columns,\n      ...columns\n    },\n    categoryBoards: [...state.categoryBoards, ...categoryBoards]\n  };\n  console.log(newState);\n  return newState;\n};\n\nconst addExtraDay = state => {\n  const nextColumnIndex = state.dayBoards.length;\n  const nextColumn = {\n    id: `day-${nextColumnIndex}`,\n    title: `Day ${nextColumnIndex + 1}`,\n    placeIds: []\n  };\n  const newState = { ...state,\n    days: nextColumnIndex + 1,\n    columns: { ...state.columns,\n      [`day-${nextColumnIndex}`]: nextColumn\n    },\n    dayBoards: [...state.dayBoards, `day-${nextColumnIndex}`]\n  };\n  console.log(newState);\n  return newState;\n};\n\nconst loadPlaces = (state, compiledData, days, location) => {\n  let columns = {};\n  let dayBoards = [];\n  let categoryBoards = [];\n\n  for (var i = 0; i < days; i++) {\n    let dayObject = {};\n    dayObject['id'] = `day-${i}`;\n    dayObject['title'] = `Day ${i + 1}`;\n    dayObject['placeIds'] = [];\n    columns[`day-${i}`] = dayObject;\n    dayBoards.push(`day-${i}`);\n  }\n\n  let placesFetched = {};\n  const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n\n  for (var c = 0; c < compiledData.length; c++) {\n    let data = compiledData[c];\n    let placeIds = [];\n\n    for (var j = 0; j < data.results.length; j++) {\n      //object structure of place card is set here\n      var placeObject = {};\n      placeObject['id'] = data.results[j].place_id;\n      placeObject['content'] = data.results[j].name;\n      placeObject['rating'] = data.results[j].rating;\n      placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n      placeObject['location'] = data.results[j].geometry.location; //console.log(placeObject);\n\n      placeIds.push(data.results[j].place_id);\n      placesFetched[data.results[j].place_id] = placeObject;\n    }\n\n    columns[`category-${c + 1}`] = {\n      id: `category-${c + 1}`,\n      title: `${placeTypes[c]}`,\n      placeIds: placeIds\n    };\n    categoryBoards.push(`category-${c + 1}`);\n  }\n\n  const newState = { ...state,\n    days: days,\n    location: location,\n    places: { ...state.places,\n      ...placesFetched\n    },\n    columns: { ...state.columns,\n      ...columns\n    },\n    dayBoards: [...dayBoards],\n    categoryBoards: [...categoryBoards]\n  }; //console.log(newState);\n\n  return newState;\n};","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Store/placeReducer.js"],"names":["initialData","placeReducer","state","action","type","compiledData","days","location","search","placesLoaded","loadPlaces","extraDay","addExtraDay","newOrder","order","console","log","Object","keys","places","length","numberOfDays","city","payload","dayBoardsLoaded","loadDayBoards","itinerary","placesFetched","daysLoaded","loadDays","extraSuggestions","placeType","itineraryLoaded","loadItinerary","placeObject","addedItem","addItem","newState","id","columns","placeIds","dayBoards","i","dayObject","push","dayPlans","itineraryId","categoryBoards","data","results","j","place_id","name","rating","photos","photo_reference","geometry","title","nextColumnIndex","nextColumn","placeTypes","c"],"mappings":"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","sourcesContent":["import initialData from './initial-data';\n\nexport const placeReducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_PLACES':\n            const { compiledData, days, location } = action.search;\n            const placesLoaded = loadPlaces(state, compiledData, days, location);\n            return placesLoaded;\n        case 'ADD_EXTRA_DAY':\n            const extraDay = addExtraDay(state);\n            return extraDay;\n        case 'CHANGE_ORDER':\n            const { newOrder } = action.order;\n            return newOrder;\n        case 'LOAD_DAYBOARDS':\n            console.log('loading day boards')\n            console.log('before dayboards loaded places length: ', Object.keys(state.places).length)\n            const { numberOfDays, city } = action.payload\n            const dayBoardsLoaded = loadDayBoards(state, numberOfDays, city)\n            console.log('dayboards loaded places length: ', Object.keys(dayBoardsLoaded.places).length)\n            return dayBoardsLoaded\n        case 'LOAD_DAYS':\n            const { itinerary, placesFetched } = action.payload\n            const daysLoaded = loadDays(state, itinerary, placesFetched)\n            console.log(daysLoaded)\n            return daysLoaded\n        case 'LOAD_ITINERARY':\n            const { extraSuggestions, placeType} = action.payload\n            const itineraryLoaded = loadItinerary(state, extraSuggestions, placeType)\n            console.log(\"complete itinerary: \", itineraryLoaded)\n            return itineraryLoaded;\n        case 'CLEAR_STATE':\n            console.log('clearing state...')\n            console.log('cleared state: ', initialData)\n            return initialData;\n        case 'ADD_SEARCH_ITEM':\n            const { placeObject } = action.payload\n            const addedItem = addItem(state, placeObject)\n            //console.log('hello from reducer: ', placeObject)\n            console.log('reducer: ', addedItem);\n            return addedItem;\n        default:\n            return state;\n    }\n}\n\nconst addItem = (state, placeObject) => {\n    const newState = {\n        ...state,\n        places: {\n            ...state.places,\n            [placeObject.id]: placeObject\n        },\n        columns: {\n            ...state.columns,\n            'searched-items': {\n                ...state.columns['searched-items'],\n                placeIds: [...state.columns['searched-items'].placeIds, placeObject.id]\n            }\n        }\n    }\n\n    return newState\n}\n\nconst loadDayBoards = (state, numberOfDays, city) => {\n    let columns = {};\n    let dayBoards = [];\n\n    for (var i = 0; i < numberOfDays; i++) {\n        let dayObject = {};\n        dayObject['id'] = `day-${i}`;\n        dayObject['title'] = `Day ${i + 1}`;\n        dayObject['placeIds'] = [];\n\n        columns[`day-${i}`] = dayObject;\n        dayBoards.push(`day-${i}`);\n    }\n\n    const newState = {\n        ...state,\n        days: numberOfDays,\n        location: city,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        dayBoards: [...dayBoards],\n    }\n\n    return newState\n}\n\nconst loadDays = (state, itinerary, placesFetched) => {\n    let columns = {};\n    let dayBoards = [];\n\n    const dayPlans = itinerary.dayPlans;\n\n    for (var i = 0; i < dayPlans.length; i++) {\n        let dayObject = {};\n        dayObject['id'] = `day-${i}`;\n        dayObject['title'] = `Day ${i + 1}`;\n        dayObject['placeIds'] = [];\n\n        columns[`day-${i}`] = dayObject;\n        dayBoards.push(`day-${i}`);\n    }\n\n\n    for(var i = 0; i < dayPlans.length; i++) {\n        const placeIds = dayPlans[i].placeIds\n        columns[`day-${i}`].placeIds = placeIds\n    }\n\n    const newState = {\n        ...state,\n        itineraryId: itinerary.id,\n        days: dayPlans.length,\n        location: itinerary.city,\n        places: placesFetched,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        dayBoards: [...dayBoards],\n    }\n\n    return newState\n}\n\nconst loadItinerary = (state, extraSuggestions, placeType) => {\n\n    //console.log('hello from reducer: ', extraSuggestions)\n    let placesFetched = state.places\n    let columns = {};\n    let categoryBoards = [];    \n\n    let data = extraSuggestions;\n    let placeIds = [];\n\n    console.log(\"check data result length: \", data.results)\n\n    for (var j = 0; j < data.results.length; j++) {\n\n        //remove duplicate data from category boards\n        if(data.results[j].place_id in placesFetched){\n            continue;\n        }\n\n        var placeObject = {};\n        placeObject['id'] = data.results[j].place_id;\n        placeObject['content'] = data.results[j].name;\n        placeObject['rating'] = data.results[j].rating;\n        placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n        placeObject['location'] = data.results[j].geometry.location;\n        \n        //console.log(placeObject);\n        placeIds.push(data.results[j].place_id);\n        placesFetched[data.results[j].place_id] = placeObject;\n    \n    }\n\n    \n\n    columns[`category-${placeType}`] = {\n        id: `category-${placeType}`,\n        title: `${placeType}`,\n        placeIds: placeIds\n    }\n\n    categoryBoards.push(`category-${placeType}`);\n\n\n    const newState = {\n        ...state,\n        places: placesFetched,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        categoryBoards: [...state.categoryBoards, ...categoryBoards],\n    }\n\n    console.log(newState)\n    return newState;\n}\n\nconst addExtraDay = (state) => {\n\n    const nextColumnIndex = state.dayBoards.length;\n    const nextColumn = {\n        id: `day-${nextColumnIndex}`, \n        title: `Day ${nextColumnIndex + 1}`, \n        placeIds: []\n    }\n\n    const newState = {\n        ...state,\n        days: nextColumnIndex + 1,\n        columns: {\n            ...state.columns,\n            [`day-${nextColumnIndex}`]: nextColumn\n        },\n        dayBoards: [...state.dayBoards, `day-${nextColumnIndex}`],\n    }\n\n    console.log(newState);\n    return newState\n}\n\nconst loadPlaces = (state, compiledData, days, location) => {\n\n    let columns = {};\n    let dayBoards = [];\n    let categoryBoards = [];\n\n    for (var i = 0; i < days; i++) {\n        let dayObject = {};\n        dayObject['id'] = `day-${i}`;\n        dayObject['title'] = `Day ${i + 1}`;\n        dayObject['placeIds'] = [];\n\n        columns[`day-${i}`] = dayObject;\n        dayBoards.push(`day-${i}`);\n    }\n\n    let placesFetched = {};\n    const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n    \n    for (var c = 0; c < compiledData.length; c++){\n\n        let data = compiledData[c];\n        let placeIds = [];\n\n        for (var j = 0; j < data.results.length; j++) {\n\n            //object structure of place card is set here\n    \n            var placeObject = {};\n            placeObject['id'] = data.results[j].place_id;\n            placeObject['content'] = data.results[j].name;\n            placeObject['rating'] = data.results[j].rating;\n            placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n            placeObject['location'] = data.results[j].geometry.location;\n            \n            //console.log(placeObject);\n            placeIds.push(data.results[j].place_id);\n            placesFetched[data.results[j].place_id] = placeObject;\n        \n        }\n    \n        columns[`category-${c+1}`] = {\n            id: `category-${c+1}`,\n            title: `${placeTypes[c]}`,\n            placeIds: placeIds\n        }\n\n        categoryBoards.push(`category-${c+1}`);\n\n    } \n    \n    const newState = {\n        ...state,\n        days: days,\n        location: location,\n        places: {\n            ...state.places,\n            ...placesFetched,\n        },\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        dayBoards: [...dayBoards],\n        categoryBoards: [...categoryBoards],\n    }\n\n    //console.log(newState);\n    return newState;\n}"]},"metadata":{},"sourceType":"module"}