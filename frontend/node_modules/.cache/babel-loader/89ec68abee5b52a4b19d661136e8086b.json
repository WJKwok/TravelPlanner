{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/frontend/src/Pages/itineraries.js\";\nimport React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { AuthContext } from '../Store/AuthContext';\nimport { PlaceContext } from '../Store/PlaceContext';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\nimport { Card, CardMedia, CardContent, Typography, IconButton, makeStyles } from '@material-ui/core';\nconst useStyles = makeStyles({\n  root: {\n    marginBottom: 15,\n    display: 'flex'\n  },\n  headerThumbnail: {\n    width: 100\n  },\n  headerTitle: {\n    flex: '1 0 auto'\n  },\n  nextButton: {\n    marginLeft: \"auto\",\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n      color: 'red'\n    }\n  }\n});\n\nfunction Itineraries() {\n  const {\n    authState\n  } = useContext(AuthContext);\n  const {\n    dispatch\n  } = useContext(PlaceContext);\n  const classes = useStyles();\n  const {\n    loading,\n    data: {\n      getUserItineraries: itineraries\n    } = {}\n  } = useQuery(GET_USER_ITINERARIES, {\n    variables: {\n      userId: authState.user.id\n    }\n  });\n  console.log(itineraries);\n  const itineraryCards = loading ? \"\" : itineraries.map(itinerary => {\n    return React.createElement(Link, {\n      to: `/itinerary/${itinerary.id}`,\n      key: itinerary.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Card, {\n      className: classes.root,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      className: classes.headerThumbnail,\n      image: \"https://i.imgur.com/zbBglmB.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      className: classes.headerTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, itinerary.city), React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, itinerary.dayPlans.length, \" Days\"))), React.createElement(IconButton, {\n      className: classes.nextButton,\n      disableRipple: true,\n      disableFocusRipple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(DeleteOutlineIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, itineraryCards, React.createElement(Link, {\n    to: '/',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    disableRipple: true,\n    disableFocusRipple: true,\n    onClick: () => dispatch({\n      type: \"CLEAR_STATE\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(AddCircleOutlineRoundedIcon, {\n    fontSize: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))));\n}\n\nconst GET_USER_ITINERARIES = gql`\n    query getUserItineraries(\n        $userId: ID!\n    ){\n        getUserItineraries(\n            userId: $userId\n        ){\n            id\n            city\n            dayPlans{\n                placeIds\n            }\n            createdAt\n            user\n            username\n        }\n    }\n`;\nconst DELETE_ITINERARY = gql`\n    mutation deleteItinerary($itineraryId: ID!){\n        deleteItinerary(itineraryId: $itineraryId)\n    }\n`;\n/* with parameters ^, without parameters\nconst GET_USER_ITINERARIES = gql`\n    query {\n        getUserItineraries{\n            id\n            city\n            dayPlans{\n                placeIds\n            }\n            createdAt\n            user\n            username\n        }\n    }\n`\n*/\n\nexport default Itineraries;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/frontend/src/Pages/itineraries.js"],"names":["React","useContext","Link","useQuery","useMutation","gql","AuthContext","PlaceContext","DeleteOutlineIcon","AddCircleOutlineRoundedIcon","Card","CardMedia","CardContent","Typography","IconButton","makeStyles","useStyles","root","marginBottom","display","headerThumbnail","width","headerTitle","flex","nextButton","marginLeft","backgroundColor","color","Itineraries","authState","dispatch","classes","loading","data","getUserItineraries","itineraries","GET_USER_ITINERARIES","variables","userId","user","id","console","log","itineraryCards","map","itinerary","city","dayPlans","length","type","DELETE_ITINERARY"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { AuthContext } from '../Store/AuthContext';\nimport { PlaceContext } from '../Store/PlaceContext';\n\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\nimport {Card, CardMedia, CardContent, Typography, IconButton, makeStyles} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: 15,\n        display: 'flex',\n    },\n    headerThumbnail: {\n        width: 100,\n    },\n    headerTitle: {\n        flex: '1 0 auto',\n    },\n    nextButton: {\n        marginLeft: \"auto\",\n        \"&:hover\": {\n            backgroundColor: \"transparent\",\n            color: 'red'\n        },\n    },\n})\n\nfunction Itineraries() {\n\n    const { authState } = useContext(AuthContext);\n    const { dispatch } = useContext(PlaceContext);\n    const classes = useStyles();\n\n    const {\n        loading,\n        data: { getUserItineraries : itineraries } = {}\n    } = useQuery(GET_USER_ITINERARIES, {\n        variables: {\n            userId: authState.user.id\n        }\n    });\n\n    console.log(itineraries);\n    const itineraryCards = loading ?\n        \"\"\n        : itineraries.map((itinerary) => {\n            return (\n                <Link to={`/itinerary/${itinerary.id}`} key={itinerary.id}>\n                    <Card className={classes.root}>\n                        <CardMedia\n                            className={classes.headerThumbnail}\n                            image=\"https://i.imgur.com/zbBglmB.jpg\"\n                        />\n                        <div>\n                            <CardContent className={classes.headerTitle}>\n                                <Typography variant=\"h5\">\n                                    {itinerary.city}\n                                </Typography>\n                                <Typography variant=\"subtitle1\">\n                                    {itinerary.dayPlans.length} Days\n                                </Typography>\n                            </CardContent>\n                        </div>\n                        <IconButton\n                            className={classes.nextButton}\n                            disableRipple={true}\n                            disableFocusRipple={true}\n                        >\n                            <DeleteOutlineIcon />\n                        </IconButton>\n                    </Card>\n                </Link>\n            )})\n    \n    return (\n        <div>\n            {itineraryCards}\n            <Link to={'/'}>\n                <IconButton \n                    disableRipple={true}\n                    disableFocusRipple={true}\n                    onClick={() => dispatch({type:\"CLEAR_STATE\"})}>\n                    <AddCircleOutlineRoundedIcon fontSize=\"large\" />\n                </IconButton>\n            </Link>\n        </div>\n        \n    );\n}\n\nconst GET_USER_ITINERARIES = gql`\n    query getUserItineraries(\n        $userId: ID!\n    ){\n        getUserItineraries(\n            userId: $userId\n        ){\n            id\n            city\n            dayPlans{\n                placeIds\n            }\n            createdAt\n            user\n            username\n        }\n    }\n`\n\nconst DELETE_ITINERARY =  gql`\n    mutation deleteItinerary($itineraryId: ID!){\n        deleteItinerary(itineraryId: $itineraryId)\n    }\n`\n\n/* with parameters ^, without parameters\nconst GET_USER_ITINERARIES = gql`\n    query {\n        getUserItineraries{\n            id\n            city\n            dayPlans{\n                placeIds\n            }\n            createdAt\n            user\n            username\n        }\n    }\n`\n*/\n\nexport default Itineraries;"]},"metadata":{},"sourceType":"module"}