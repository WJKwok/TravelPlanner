{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/form.js\";\nimport React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { TextField, MenuItem } from '@material-ui/core/';\nimport { PlaceContext } from '../Store/PlaceContext';\nconst useStyles = makeStyles({\n  textField: {\n    width: '25ch'\n  }\n});\n\nfunction Form() {\n  const {\n    dispatch\n  } = useContext(PlaceContext);\n  const [days, setDays] = useState(0);\n  const [location, setLocation] = useState(\"Berlin\");\n  const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n\n  const fetchPlaces = async () => {\n    const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n    let compiledData = [];\n\n    for (var i = 0; i < placeTypes.length; i++) {\n      // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n      // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n      const response = await fetch(`/place/textsearch/json?query=best+${placeTypes[i]}+${location}&key=${googlePlacesApi}`);\n      const data = await response.json();\n      compiledData.push(data);\n    }\n\n    return compiledData;\n  };\n\n  const clickHandler = async () => {\n    let compiledData = await fetchPlaces();\n    dispatch({\n      type: 'SHOW_PLACES',\n      search: {\n        compiledData,\n        days,\n        location\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    className: classes.textField,\n    id: \"location\",\n    select: true,\n    label: \"Select City\",\n    value: location,\n    onChange: e => setLocation(e.target.value),\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MenuItem, {\n    value: \"Berlin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Berlin\"), React.createElement(MenuItem, {\n    value: \"Zurich\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Zurich\"), React.createElement(MenuItem, {\n    value: \"New+York\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"New York\")), React.createElement(\"input\", {\n    id: \"number\",\n    placeholder: \"No. of Days\",\n    type: \"text\",\n    value: days,\n    onChange: e => setDays(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Components/form.js"],"names":["React","useState","useContext","makeStyles","TextField","MenuItem","PlaceContext","useStyles","textField","width","Form","dispatch","days","setDays","location","setLocation","placeTypes","fetchPlaces","googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","compiledData","i","length","response","fetch","data","json","push","clickHandler","type","search","classes","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport {TextField, MenuItem} from '@material-ui/core/';\n\nimport { PlaceContext } from '../Store/PlaceContext';\n\nconst useStyles = makeStyles({\n    textField: {\n        width: '25ch',\n    }\n})\n\nfunction Form() {\n\n    const { dispatch } = useContext(PlaceContext);\n\n    const [days, setDays] = useState(0);\n    const [location, setLocation] = useState(\"Berlin\");\n\n    const placeTypes = ['Restaurants', \"Hotels\", \"Tourist+attraction\"];\n\n    const fetchPlaces = async () => {\n\n        const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n        let compiledData = [];\n\n        for (var i = 0; i < placeTypes.length; i++){\n\n            // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n            // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n\n            const response = await fetch(`/place/textsearch/json?query=best+${placeTypes[i]}+${location}&key=${googlePlacesApi}`)\n            const data = await response.json();\n            compiledData.push(data);\n        }\n        return compiledData;\n    }\n\n\n    const clickHandler = async () => {\n\n        let compiledData = await fetchPlaces();\n        dispatch({ type:'SHOW_PLACES', search: {compiledData, days, location}});\n\n    };\n\n    return (\n        <div>\n            <TextField\n                className={classes.textField}\n                id=\"location\"\n                select\n                label=\"Select City\"\n                value={location}\n                onChange={(e) => setLocation(e.target.value)}\n                variant=\"outlined\"\n                >\n                    <MenuItem value=\"Berlin\">Berlin</MenuItem>\n                    <MenuItem value=\"Zurich\">Zurich</MenuItem>\n                    <MenuItem value=\"New+York\">New York</MenuItem>\n                </TextField>\n            <input id='number' placeholder='No. of Days' type=\"text\" value={days} onChange={(e) => setDays(e.target.value)}/>\n            <button type='submit' onClick={clickHandler}>Submit</button>\n        </div>\n    );\n}\n\nexport default Form;\n\n"]},"metadata":{},"sourceType":"module"}