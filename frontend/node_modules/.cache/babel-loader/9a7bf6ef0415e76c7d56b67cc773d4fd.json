{"ast":null,"code":"export const placeReducer = async (state, action) => {\n  switch (action.type) {\n    case 'SHOW_PLACES':\n      const places = await loadPlaces(action.search.type, action.search.location);\n      console.log(places);\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst loadPlaces = async (type, location) => {\n  const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n  const response = await fetch(`/place/textsearch/json?query=${type}+${location}&key=${googlePlacesApi}`);\n  const data = await response.json();\n  console.log(data.results);\n  var placesFetched = {};\n  var placeIds = [];\n\n  for (var j = 0; j < data.results.length; j++) {\n    //object structure of place card is set here\n    var placeObject = {};\n    placeObject['id'] = `place-${j}`;\n    placeObject['content'] = data.results[j].name;\n    placeObject['rating'] = data.results[j].rating;\n    placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\"; //console.log(placeObject);\n\n    placeIds.push(`place-${j}`);\n    placesFetched[`place-${j}`] = placeObject;\n  }\n\n  columns['data-1'] = { ...state.columns['data-1'],\n    placeIds: placeIds\n  };\n  const newState = { ...state,\n    places: placesFetched,\n    columns: { ...state.columns,\n      ...columns\n    },\n    columnOrder: [...columnOrder]\n  };\n  return newState;\n};","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Store/placeReducer.js"],"names":["placeReducer","state","action","type","places","loadPlaces","search","location","console","log","googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","response","fetch","data","json","results","placesFetched","placeIds","j","length","placeObject","name","rating","photos","photo_reference","push","columns","newState","columnOrder"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,OAAOC,KAAP,EAAcC,MAAd,KAAyB;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,YAAMC,MAAM,GAAG,MAAMC,UAAU,CAACH,MAAM,CAACI,MAAP,CAAcH,IAAf,EAAqBD,MAAM,CAACI,MAAP,CAAcC,QAAnC,CAA/B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,aAAO,EACH,GAAGH;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AARR;AAUH,CAXM;;AAaP,MAAMI,UAAU,GAAG,OAAOF,IAAP,EAAaI,QAAb,KAA0B;AACzC,QAAMG,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAApC;AACA,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BZ,IAAK,IAAGI,QAAS,QAAOG,eAAgB,EAAzE,CAA5B;AACA,QAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,EAAAA,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACE,OAAjB;AAEA,MAAIC,aAAa,GAAG,EAApB;AACA,MAAIC,QAAQ,GAAG,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,IAAI,CAACE,OAAL,CAAaI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAE1C;AAEA,QAAIE,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAAC,IAAD,CAAX,GAAqB,SAAQF,CAAE,EAA/B;AACAE,IAAAA,WAAW,CAAC,SAAD,CAAX,GAAyBP,IAAI,CAACE,OAAL,CAAaG,CAAb,EAAgBG,IAAzC;AACAD,IAAAA,WAAW,CAAC,QAAD,CAAX,GAAwBP,IAAI,CAACE,OAAL,CAAaG,CAAb,EAAgBI,MAAxC;AACAF,IAAAA,WAAW,CAAC,UAAD,CAAX,GAA0BP,IAAI,CAACE,OAAL,CAAaG,CAAb,EAAgBK,MAAhB,GAAyBV,IAAI,CAACE,OAAL,CAAaG,CAAb,EAAgBK,MAAhB,CAAuB,CAAvB,EAA0BC,eAAnD,GAAqE,GAA/F,CAR0C,CAS1C;;AACAP,IAAAA,QAAQ,CAACQ,IAAT,CAAe,SAAQP,CAAE,EAAzB;AACAF,IAAAA,aAAa,CAAE,SAAQE,CAAE,EAAZ,CAAb,GAA8BE,WAA9B;AAEH;;AAEDM,EAAAA,OAAO,CAAC,QAAD,CAAP,GAAoB,EAChB,GAAG5B,KAAK,CAAC4B,OAAN,CAAc,QAAd,CADa;AAEhBT,IAAAA,QAAQ,EAAEA;AAFM,GAApB;AAKA,QAAMU,QAAQ,GAAG,EACb,GAAG7B,KADU;AAEbG,IAAAA,MAAM,EAAEe,aAFK;AAGbU,IAAAA,OAAO,EAAE,EACL,GAAG5B,KAAK,CAAC4B,OADJ;AAEL,SAAGA;AAFE,KAHI;AAObE,IAAAA,WAAW,EAAE,CAAC,GAAGA,WAAJ;AAPA,GAAjB;AAUA,SAAOD,QAAP;AACH,CAxCD","sourcesContent":["export const placeReducer = async (state, action) => {\n    switch (action.type) {\n        case 'SHOW_PLACES':\n            const places = await loadPlaces(action.search.type, action.search.location);\n            console.log(places);\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n}\n\nconst loadPlaces = async (type, location) => {\n    const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n    const response = await fetch(`/place/textsearch/json?query=${type}+${location}&key=${googlePlacesApi}`)\n    const data = await response.json();\n    console.log(data.results)\n\n    var placesFetched = {};\n    var placeIds = [];\n    \n    for (var j = 0; j < data.results.length; j++) {\n\n        //object structure of place card is set here\n\n        var placeObject = {};\n        placeObject['id'] = `place-${j}`;\n        placeObject['content'] = data.results[j].name;\n        placeObject['rating'] = data.results[j].rating;\n        placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n        //console.log(placeObject);\n        placeIds.push(`place-${j}`);\n        placesFetched[`place-${j}`] = placeObject;\n    \n    }\n\n    columns['data-1'] = {\n        ...state.columns['data-1'],\n        placeIds: placeIds\n    }\n    \n    const newState = {\n        ...state,\n        places: placesFetched,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        columnOrder: [...columnOrder],\n    }\n\n    return newState;\n}"]},"metadata":{},"sourceType":"module"}