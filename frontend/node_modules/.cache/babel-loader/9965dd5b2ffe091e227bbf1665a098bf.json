{"ast":null,"code":"export const placeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SHOW_PLACES':\n      const {\n        compiledData,\n        days,\n        location\n      } = action.search;\n      const newState = loadPlaces(state, compiledData, days, location);\n      return newState;\n\n    case 'CHANGE_ORDER':\n      const {\n        newOrder\n      } = action.order;\n      return newOrder;\n\n    case 'HOVER_COLOR':\n      const {\n        newColor\n      } = action.color;\n      return newColor;\n\n    default:\n      return state;\n  }\n};\n\nconst loadPlaces = (state, compiledData, days, location) => {\n  let columns = {};\n  let dayBoards = [];\n  let placeBoards = [];\n\n  for (var i = 0; i < days; i++) {\n    var dataObject = {};\n    dataObject['id'] = `column-${i}`;\n    dataObject['title'] = `Day ${i + 1}`;\n    dataObject['placeIds'] = [];\n    columns[`column-${i}`] = dataObject;\n    dayBoards.push(`column-${i}`);\n  }\n\n  let placesFetched = {};\n\n  for (var c = 0; c < compiledData.length; c++) {\n    let data = compiledData[c];\n    let placeIds = [];\n\n    for (var j = 0; j < data.results.length; j++) {\n      //object structure of place card is set here\n      var placeObject = {};\n      placeObject['id'] = `place-${j * (c + 1)}`;\n      placeObject['content'] = data.results[j].name;\n      placeObject['rating'] = data.results[j].rating;\n      placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n      placeObject['location'] = data.results[j].geometry.location; //console.log(placeObject);\n\n      placeIds.push(`place-${j * (c + 1)}`);\n      placesFetched[`place-${j * (c + 1)}`] = placeObject;\n    }\n\n    columns[`data-${c + 1}`] = {\n      id: `data-${c + 1}`,\n      title: 'Places',\n      placeIds: placeIds\n    };\n    placeBoards.push(`data-${c + 1}`);\n  }\n\n  const newState = { ...state,\n    place: location,\n    places: placesFetched,\n    columns: { ...state.columns,\n      ...columns\n    },\n    dayBoards: [...dayBoards],\n    placeBoards: [...placeBoards]\n  }; // console.log(newState);\n\n  return newState;\n};","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Store/placeReducer.js"],"names":["placeReducer","state","action","type","compiledData","days","location","search","newState","loadPlaces","newOrder","order","newColor","color","columns","dayBoards","placeBoards","i","dataObject","push","placesFetched","c","length","data","placeIds","j","results","placeObject","name","rating","photos","photo_reference","geometry","id","title","place","places"],"mappings":"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","sourcesContent":["export const placeReducer = (state, action) => {\n    switch (action.type) {\n        case 'SHOW_PLACES':\n            const { compiledData, days, location } = action.search;\n            const newState = loadPlaces(state, compiledData, days, location);\n            return newState;\n        case 'CHANGE_ORDER':\n            const { newOrder } = action.order;\n            return newOrder;\n        case 'HOVER_COLOR':\n            const { newColor } = action.color;\n            return newColor;\n        default:\n            return state;\n    }\n}\n\nconst loadPlaces = (state, compiledData, days, location) => {\n\n    let columns = {};\n    let dayBoards = [];\n    let placeBoards = [];\n\n    for (var i = 0; i < days; i++) {\n        var dataObject = {};\n        dataObject['id'] = `column-${i}`;\n        dataObject['title'] = `Day ${i + 1}`;\n        dataObject['placeIds'] = [];\n\n        columns[`column-${i}`] = dataObject;\n        dayBoards.push(`column-${i}`);\n    }\n\n    let placesFetched = {};\n    \n    for (var c = 0; c < compiledData.length; c++){\n\n        let data = compiledData[c];\n        let placeIds = [];\n\n        for (var j = 0; j < data.results.length; j++) {\n\n            //object structure of place card is set here\n    \n            var placeObject = {};\n            placeObject['id'] = `place-${j*(c+1)}`;\n            placeObject['content'] = data.results[j].name;\n            placeObject['rating'] = data.results[j].rating;\n            placeObject['photoRef'] = data.results[j].photos ? data.results[j].photos[0].photo_reference : \"0\";\n            placeObject['location'] = data.results[j].geometry.location;\n            \n            //console.log(placeObject);\n            placeIds.push(`place-${j*(c+1)}`);\n            placesFetched[`place-${j*(c+1)}`] = placeObject;\n        \n        }\n    \n        columns[`data-${c+1}`] = {\n            id: `data-${c+1}`,\n            title: 'Places',\n            placeIds: placeIds\n        }\n\n        placeBoards.push(`data-${c+1}`);\n\n    } \n    \n    const newState = {\n        ...state,\n        place: location,\n        places: placesFetched,\n        columns: {\n            ...state.columns,\n            ...columns,\n        },\n        dayBoards: [...dayBoards],\n        placeBoards: [...placeBoards],\n    }\n\n    // console.log(newState);\n    return newState;\n}"]},"metadata":{},"sourceType":"module"}