{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/client/src/utils/AuthRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from '../Store/AuthContext';\n\nfunction AuthRoute({\n  component: Component,\n  ...rest\n}) {\n  const {\n    authState: {\n      user\n    }\n  } = useContext(AuthContext);\n  return React.createElement(Route, Object.assign({}, rest, {\n    // exact, path, other props\n    render: props => user ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n}\n\nexport default AuthRoute;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/utils/AuthRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","AuthRoute","component","Component","rest","authState","user","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAnB,EAAoD;AAChD,QAAM;AAAEC,IAAAA,SAAS,EAAG;AAACC,MAAAA;AAAD;AAAd,MAAyBT,UAAU,CAACG,WAAD,CAAzC;AACA,SACI,oBAAC,KAAD,oBACQI,IADR;AACc;AACV,IAAA,MAAM,EAAGG,KAAD,IACJD,IAAI,GAAG,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAwB,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH;;AAED,eAAeN,SAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom'\n\nimport { AuthContext } from '../Store/AuthContext';\n\nfunction AuthRoute({component: Component, ...rest}) {\n    const { authState : {user} } = useContext(AuthContext)\n    return (\n        <Route\n            {...rest} // exact, path, other props\n            render={(props) => \n                user ? <Redirect to='/'/> : <Component {...props}/>\n            }\n        />\n    )\n}\n\nexport default AuthRoute"]},"metadata":{},"sourceType":"module"}