{"ast":null,"code":"const googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\nexport const fetchCategories = async (categories, city, dispatch) => {\n  for (var i = 0; i < categories.length; i++) {\n    // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n    // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n    const response = await fetch(`/place/textsearch/json?query=best+${categories[i]}+${city}&key=${googlePlacesApi}`);\n    const extraSuggestions = await response.json();\n    dispatch({\n      type: \"LOAD_ITINERARY\",\n      payload: {\n        extraSuggestions,\n        placeType: categories[i]\n      }\n    });\n  }\n};\nexport const fetchPlaceIds = async dayPlans => {\n  let placesFetched = {};\n\n  for (var i = 0; i < dayPlans.length; i++) {\n    const placeIds = dayPlans[i].placeIds;\n\n    for (var j = 0; j < placeIds.length; j++) {\n      const response = await fetch(`/place/details/json?placeid=${placeIds[j]}&key=${googlePlacesApi}`);\n      const placeData = await response.json();\n      let placeObject = {};\n      placeObject['id'] = placeIds[j];\n      placeObject['content'] = placeData.result.name;\n      placeObject['rating'] = placeData.result.rating;\n      placeObject['photoRef'] = placeData.result.photos ? placeData.result.photos[0].photo_reference : \"0\";\n      placeObject['location'] = placeData.result.geometry.location;\n      console.log(placeObject); //console.log('every iteration:', Object.keys(placesFetched).length)\n\n      placesFetched[placeIds[j]] = placeObject;\n    }\n  }\n\n  return placesFetched;\n};","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/client/src/Services/googlePlaceApi.js"],"names":["googlePlacesApi","process","env","REACT_APP_GOOGLE_PLACES_API_KEY","fetchCategories","categories","city","dispatch","i","length","response","fetch","extraSuggestions","json","type","payload","placeType","fetchPlaceIds","dayPlans","placesFetched","placeIds","j","placeData","placeObject","result","name","rating","photos","photo_reference","geometry","location","console","log"],"mappings":"AACA,MAAMA,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,+BAApC;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAOC,UAAP,EAAmBC,IAAnB,EAAyBC,QAAzB,KAAsC;AAEjE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,EAAxC,EAA2C;AAEvC;AACA;AAEA,UAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCN,UAAU,CAACG,CAAD,CAAI,IAAGF,IAAK,QAAON,eAAgB,EAAnF,CAA5B;AACA,UAAMY,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA/B;AAEAN,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAC,gBAAP;AAAyBC,MAAAA,OAAO,EAAC;AAACH,QAAAA,gBAAD;AAAmBI,QAAAA,SAAS,EAAEX,UAAU,CAACG,CAAD;AAAxC;AAAjC,KAAD,CAAR;AACH;AAEJ,CAbM;AAeP,OAAO,MAAMS,aAAa,GAAG,MAAOC,QAAP,IAAoB;AAE7C,MAAIC,aAAa,GAAG,EAApB;;AAEA,OAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGU,QAAQ,CAACT,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC,UAAMY,QAAQ,GAAGF,QAAQ,CAACV,CAAD,CAAR,CAAYY,QAA7B;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,QAAQ,CAACX,MAA5B,EAAoCY,CAAC,EAArC,EAAwC;AACpC,YAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8BS,QAAQ,CAACC,CAAD,CAAI,QAAOrB,eAAgB,EAAnE,CAA5B;AACA,YAAMsB,SAAS,GAAG,MAAMZ,QAAQ,CAACG,IAAT,EAAxB;AAEA,UAAIU,WAAW,GAAG,EAAlB;AACAA,MAAAA,WAAW,CAAC,IAAD,CAAX,GAAoBH,QAAQ,CAACC,CAAD,CAA5B;AACAE,MAAAA,WAAW,CAAC,SAAD,CAAX,GAAyBD,SAAS,CAACE,MAAV,CAAiBC,IAA1C;AACAF,MAAAA,WAAW,CAAC,QAAD,CAAX,GAAwBD,SAAS,CAACE,MAAV,CAAiBE,MAAzC;AACAH,MAAAA,WAAW,CAAC,UAAD,CAAX,GAA0BD,SAAS,CAACE,MAAV,CAAiBG,MAAjB,GAA0BL,SAAS,CAACE,MAAV,CAAiBG,MAAjB,CAAwB,CAAxB,EAA2BC,eAArD,GAAuE,GAAjG;AACAL,MAAAA,WAAW,CAAC,UAAD,CAAX,GAA0BD,SAAS,CAACE,MAAV,CAAiBK,QAAjB,CAA0BC,QAApD;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,WAAZ,EAXoC,CAYpC;;AACAJ,MAAAA,aAAa,CAACC,QAAQ,CAACC,CAAD,CAAT,CAAb,GAA6BE,WAA7B;AACH;AACJ;;AAED,SAAOJ,aAAP;AACH,CAzBM","sourcesContent":["\nconst googlePlacesApi = process.env.REACT_APP_GOOGLE_PLACES_API_KEY;\n\nexport const fetchCategories = async (categories, city, dispatch) => {\n\n    for (var i = 0; i < categories.length; i++){\n\n        // https://stackoverflow.com/questions/43262121/trying-to-use-fetch-and-pass-in-mode-no-cors \n        // added proxy in package.json \"proxy\": \"https://maps.googleapis.com/maps/api\"\n\n        const response = await fetch(`/place/textsearch/json?query=best+${categories[i]}+${city}&key=${googlePlacesApi}`)\n        const extraSuggestions = await response.json();\n\n        dispatch({ type:\"LOAD_ITINERARY\", payload:{extraSuggestions, placeType: categories[i]}})\n    }\n\n}\n\nexport const fetchPlaceIds = async (dayPlans) => {\n\n    let placesFetched = {};\n\n    for(var i = 0; i < dayPlans.length; i++) {\n        const placeIds = dayPlans[i].placeIds\n\n        for(var j = 0; j < placeIds.length; j++){\n            const response = await fetch(`/place/details/json?placeid=${placeIds[j]}&key=${googlePlacesApi}`)\n            const placeData = await response.json();\n\n            let placeObject = {};\n            placeObject['id'] = placeIds[j]\n            placeObject['content'] = placeData.result.name;\n            placeObject['rating'] = placeData.result.rating;\n            placeObject['photoRef'] = placeData.result.photos ? placeData.result.photos[0].photo_reference : \"0\";\n            placeObject['location'] = placeData.result.geometry.location;\n            \n            console.log(placeObject);\n            //console.log('every iteration:', Object.keys(placesFetched).length)\n            placesFetched[placeIds[j]] = placeObject;\n        }\n    }\n\n    return placesFetched\n}"]},"metadata":{},"sourceType":"module"}