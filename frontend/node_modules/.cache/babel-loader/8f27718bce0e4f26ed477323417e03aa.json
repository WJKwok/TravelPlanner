{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/dnd/src/Store/AuthContext.js\";\nimport React, { createContext, useReducer } from 'react'; //this is not necessary but good practice\n\nconst initialState = {\n  user: null\n};\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      localStorage.setItem('jwtToken', action.payload.token);\n      return { ...state,\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction AuthContextProvider(props) {\n  //initial state can be just {} but this is good practice\n  const [authState, dispatch] = useReducer(authReducer, initialState);\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      authState,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, props.children);\n}\n\nexport { AuthContext, AuthContextProvider };","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/dnd/src/Store/AuthContext.js"],"names":["React","createContext","useReducer","initialState","user","AuthContext","authReducer","state","action","type","localStorage","setItem","payload","token","AuthContextProvider","props","authState","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AADW,CAArB;AAIA,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AAEA,MAAMK,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACIC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,MAAM,CAACI,OAAP,CAAeC,KAAhD;AACA,aAAO,EACH,GAAGN,KADA;AAEHH,QAAAA,IAAI,EAAEI,MAAM,CAACI;AAFV,OAAP;;AAIJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,SAASO,mBAAT,CAA6BC,KAA7B,EAAoC;AAEhC;AACA,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBf,UAAU,CAACI,WAAD,EAAcH,YAAd,CAAxC;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEa,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QADX,CADJ;AAKH;;AAED,SAASb,WAAT,EAAsBS,mBAAtB","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\n//this is not necessary but good practice\nconst initialState = {\n    user: null\n};\n\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n    switch(action.type) {\n        case 'LOGIN':\n            localStorage.setItem('jwtToken', action.payload.token);\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction AuthContextProvider(props) {\n\n    //initial state can be just {} but this is good practice\n    const [authState, dispatch] = useReducer(authReducer, initialState);\n\n    return(\n        <AuthContext.Provider value={{ authState, dispatch }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport { AuthContext, AuthContextProvider };"]},"metadata":{},"sourceType":"module"}