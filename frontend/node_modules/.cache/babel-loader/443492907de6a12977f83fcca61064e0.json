{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/dnd/src/Components/board.js\";\nimport React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport initialData from '../Store/initial-data';\nimport Column from './column';\n\nclass Board extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialData;\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const column = this.state.columns[source.droppableId];\n      const newTaskIds = Array.from(column.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const newColumn = { ...column,\n        taskIds: newTaskIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      };\n      this.setState(newState);\n    };\n  }\n\n  render() {\n    return React.createElement(DragDropContext, {\n      onDragEnd: this.onDragEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state.columnOrder.map(columnId => {\n      const column = this.state.columns[columnId];\n      const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n      return React.createElement(Column, {\n        key: column.id,\n        column: column,\n        tasks: tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      });\n    })));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/dnd/src/Components/board.js"],"names":["React","Component","DragDropContext","initialData","Column","Board","state","onDragEnd","result","destination","source","draggableId","droppableId","index","column","columns","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","setState","render","columnOrder","map","columnId","tasks","taskId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,qBAAhC;AAEA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClBH,WADkB;;AAAA,SAG1BI,SAH0B,GAGdC,MAAM,IAAI;AAClB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,MAAf;AAAuBC,QAAAA;AAAvB,UAAuCH,MAA7C;;AAEA,UAAI,CAACC,WAAL,EAAkB;AACd;AACH;;AAED,UACIA,WAAW,CAACG,WAAZ,KAA4BF,MAAM,CAACE,WAAnC,IACAH,WAAW,CAACI,KAAZ,KAAsBH,MAAM,CAACG,KAFjC,EAGE;AACE;AACH;;AAED,YAAMC,MAAM,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBL,MAAM,CAACE,WAA1B,CAAf;AACA,YAAMI,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAM,CAACK,OAAlB,CAAnB;AACAH,MAAAA,UAAU,CAACI,MAAX,CAAkBV,MAAM,CAACG,KAAzB,EAAgC,CAAhC;AACAG,MAAAA,UAAU,CAACI,MAAX,CAAkBX,WAAW,CAACI,KAA9B,EAAqC,CAArC,EAAwCF,WAAxC;AAEA,YAAMU,SAAS,GAAG,EACd,GAAGP,MADW;AAEdK,QAAAA,OAAO,EAAEH;AAFK,OAAlB;AAKA,YAAMM,QAAQ,GAAG,EACb,GAAG,KAAKhB,KADK;AAEbS,QAAAA,OAAO,EAAE,EACL,GAAG,KAAKT,KAAL,CAAWS,OADT;AAEL,WAACM,SAAS,CAACE,EAAX,GAAgBF;AAFX;AAFI,OAAjB;AAQA,WAAKG,QAAL,CAAcF,QAAd;AAEH,KArCyB;AAAA;;AAuC1BG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE,KAAKlB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWoB,WAAX,CAAuBC,GAAvB,CAA2BC,QAAQ,IAAI;AACpC,YAAMd,MAAM,GAAG,KAAKR,KAAL,CAAWS,OAAX,CAAmBa,QAAnB,CAAf;AACA,YAAMC,KAAK,GAAGf,MAAM,CAACK,OAAP,CAAeQ,GAAf,CAAmBG,MAAM,IACnC,KAAKxB,KAAL,CAAWuB,KAAX,CAAiBC,MAAjB,CADU,CAAd;AAIA,aAAO,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAEhB,MAAM,CAACS,EAApB;AAAwB,QAAA,MAAM,EAAET,MAAhC;AAAwC,QAAA,KAAK,EAAEe,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAPA,CADL,CADJ,CADJ;AAeH;;AAvDyB;;AA0D9B,eAAexB,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { DragDropContext } from 'react-beautiful-dnd';\n\nimport initialData from '../Store/initial-data';\nimport Column from './column';\n\nclass Board extends Component {\n    state = initialData;\n\n    onDragEnd = result => {\n        const { destination, source, draggableId } = result;\n\n        if (!destination) {\n            return;\n        }\n\n        if (\n            destination.droppableId === source.droppableId &&\n            destination.index === source.index\n        ) {\n            return;\n        }\n\n        const column = this.state.columns[source.droppableId];\n        const newTaskIds = Array.from(column.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n\n        const newColumn = {\n            ...column,\n            taskIds: newTaskIds,\n        };\n\n        const newState = {\n            ...this.state,\n            columns: {\n                ...this.state.columns,\n                [newColumn.id]: newColumn,\n            },\n        };\n\n        this.setState(newState);\n        \n    };\n\n    render() {\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <div className='container'>\n                    {this.state.columnOrder.map(columnId => {\n                        const column = this.state.columns[columnId];\n                        const tasks = column.taskIds.map(taskId => \n                            this.state.tasks[taskId]\n                        );\n\n                        return <Column key={column.id} column={column} tasks={tasks}/>\n                    })}\n                </div>\n                \n            </DragDropContext>\n        );\n    }\n}\n\nexport default Board;"]},"metadata":{},"sourceType":"module"}