{"ast":null,"code":"var _jsxFileName = \"/Users/wen/Desktop/Projects/React/travelPlanner/dnd/src/Store/AuthContext.js\";\nimport React, { createContext, useReducer } from 'react';\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      localStorage.setItem('jwtToken', action.payload.token);\n      return { ...state,\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction AuthContextProvider(props) {\n  const [authState, dispatch] = useReducer(authReducer, {});\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      authState,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, props.children);\n}\n\nexport { AuthContext, AuthContextProvider };","map":{"version":3,"sources":["/Users/wen/Desktop/Projects/React/travelPlanner/dnd/src/Store/AuthContext.js"],"names":["React","createContext","useReducer","AuthContext","authReducer","state","action","type","localStorage","setItem","payload","token","user","AuthContextProvider","props","authState","dispatch","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,MAAMC,WAAW,GAAGF,aAAa,EAAjC;;AAEA,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,OAAL;AACIC,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCH,MAAM,CAACI,OAAP,CAAeC,KAAhD;AACA,aAAO,EACH,GAAGN,KADA;AAEHO,QAAAA,IAAI,EAAEN,MAAM,CAACI;AAFV,OAAP;;AAIJ;AACI,aAAOL,KAAP;AARR;AAUH,CAXD;;AAaA,SAASQ,mBAAT,CAA6BC,KAA7B,EAAoC;AAEhC,QAAM,CAACC,SAAD,EAAYC,QAAZ,IAAwBd,UAAU,CAACE,WAAD,EAAc,EAAd,CAAxC;AAEA,SACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEW,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QADX,CADJ;AAKH;;AAED,SAASd,WAAT,EAAsBU,mBAAtB","sourcesContent":["import React, { createContext, useReducer } from 'react';\n\nconst AuthContext = createContext();\n\nconst authReducer = (state, action) => {\n    switch(action.type) {\n        case 'LOGIN':\n            localStorage.setItem('jwtToken', action.payload.token);\n            return {\n                ...state,\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nfunction AuthContextProvider(props) {\n\n    const [authState, dispatch] = useReducer(authReducer, {});\n\n    return(\n        <AuthContext.Provider value={{ authState, dispatch }}>\n            {props.children}\n        </AuthContext.Provider>\n    );\n}\n\nexport { AuthContext, AuthContextProvider };"]},"metadata":{},"sourceType":"module"}